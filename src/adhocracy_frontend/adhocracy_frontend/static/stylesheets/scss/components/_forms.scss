/*doc
---
title: input
name: input
category: Inputs
---

Inputs are all elements that allow users to input data.

They can have the following states:

-   ng-invalid
-   ng-disabled or :disabled
-   ng-dirty
-   :focus

Is-invalid should generally only change the presentation of the input widget if
it is also dirty or the form has been submitted.

```html_example
<input type="text" placeholder="required and dirty" required="required" class="ng-dirty" />
<input type="text" placeholder="invalid and dirty" class="ng-invalid ng-dirty" />
<input type="text" placeholder="invalid and prestine" class="ng-invalid" />
<input type="text" disabled="disabled" placeholder="disabled" />
<form class="ng-submitted">
    <input type="text" placeholder="invalid in submitted form" class="ng-invalid" />
</form>
```
*/

/*doc
---
title: textinput
name: textinput
parent: input
---

Element to enter one line of text. It is used e.g. for login, register,
creating/editing comments, or creating/editing proposals.

In fact, there are multiple variants of this already defined in HTML.
They should all look and behave similarily.

Input fields need sufficient contrast to the background, ideally with a
border. In order to make this simple, they must only be used on
surfaces with background color `color-background-base`.

```html_example
<input type="text" placeholder="text" />
<input type="url" placeholder="url" />
<input type="password" placeholder="password" />
<input type="email" placeholder="email" />
<input type="date" placeholder="date" />
<input type="time" placeholder="time" />
<input type="number" placeholder="number" />
<input type="text" placeholder="required" required="required" />
<select required="required">
    <option>This one</option>
    <option>The other one</option>
</select>
```
*/

/*doc
---
title: Textareas
name: textinput.textarea
parent: textinput
---

Textareas behave exactly like text inputs however they are resizeable when
enabled in modern browsers.

```html_example
<textarea></textarea>
<textarea disabled="disabled" placeholder="disabled"></textarea>
```
*/

/*doc
---
title: Title modifier
name: textinput.m-title
parent: textinput
---

Textinput that represents a title.

```html_example
<input type="text" placeholder="title" class="m-title"/>
```
*/

.error-state {
    border-color: $color-function-negative;
    color: $color-function-negative;
    outline: 1px solid $color-function-negative;
}

input[type="text"],
input[type="url"],
input[type="password"],
input[type="email"],
input[type="date"],
input[type="time"],
input[type="number"],
select,
textarea {
    @include rem(margin-bottom, 0.5rem);
    @include rem(padding, 0.25rem 1rem);
    display: block;
    width: 100%;
    border: 1px solid $color-structure-introvert;
    color: $color-text-normal;
    background-color: $color-background-base-introvert;

    @include placeholder {
        @include opacity(1);
        color: $color-text-introvert;
    }

    &.m-title {
        @include rem(font-size, $font-size-large);
    }

    &.ng-dirty.ng-invalid {
        @extend .error-state;
        border-color: $color-function-negative;
        color: $color-function-negative;
        outline: 1px solid $color-function-negative;
    }

    &.ng-disabled,
    &:disabled {
        border-color: $color-structure-normal;
        outline: 1px solid $color-structure-normal;
    }
}



.ng-submitted {
    input[type="text"],
    input[type="url"],
    input[type="password"],
    input[type="email"],
    input[type="date"],
    input[type="time"],
    input[type="number"],
    label,
    div,
    select,
    textarea {
        &.ng-invalid {
            @extend .error-state;
        }
    }
}

textarea {
    resize: vertical;

    &.ng-disabled,
    &:disabled {
        resize: none;
    }
}

/*doc
---
title: error text
name: error-text
parent: input
---

When text is in error it shows in an invalid color state

```html_example
<span class="input-error">Please enter your first name</span>
```
*/

/*doc
---
title: label text
name: label-text
parent: input
---

Class to add styling to a label when the label itself is used as a container.

```html_example
<label>
    <span class="label-text">A label</span>
    <input type="text" />
</label>
```
*/

.label-text {
    @include inline-block;
    @include rem(padding-bottom, 0.5rem);
}

.input-error {
    @include rem(font-size, $font-size-small);
    @include rem(padding-top, 10px);
    display: block;
    color: $color-function-negative;
}

/*doc
---
title: checkbox
name: checkbox
parent: input
---

A checkbox has two states: is-checked and is-unchecked. It may be required to
be checked, w.g. for accepting terms of service.

```html_example
<label>
    <input type="checkbox" />
    click me!
</label>
```
*/

/*doc
---
title: radio button
name: radio
parent: input
---

A radio button, like a checkbox, has the two states: is-checked and
is-unchecked.  Of a group of radio buttons, none or a single one can be
checked. "required" in this context means that any of the buttons must be
checked.

```html_example
<label>
    <input name="radio-example" type="radio" />
    One option
</label>
<label>
    <input name="radio-example" type="radio" />
    The other option
</label>
```
*/

/*doc
---
title: label
name: label
category: Inputs
---

A label can be used to describe an input.

```html_example
<label>
    <input type="text" />
    description
</label>
```
*/

/*doc
---
title: Errors
name: errors
category: Inputs
---
*/

/*doc
---
title: Form Error
name: form-error
parent: errors
---

This error concerns the whole form.

```html_example
<div class="login">
    <h1 class="title">Log in!</h1>
    <div class="form-error">
        <p>This is plain wrong!</p>
    </div>
    <form class="login-form">
        <input type="text" name="name" placeholder="email or username" />
        <input type="password" name="password" placeholder="password" />
        <input class="button button-cta" type="submit" value="login" />
    </form>
</div>
```
*/
.form-error {
    @include rem(margin, 1rem 0);
    @include rem(padding, 0 1rem);
    border-top: 1px solid $color-structure-introvert;
    border-bottom: 1px solid $color-structure-introvert;
    background: $color-structure-introvert;
}

/*doc
---
title: Input Error
name: input-error
parent: errors
---

This error concerns a single input.

```html_example
<div class="login">
    <h1 class="title">Log in!</h1>
    <form class="login-form">
        <input type="text" name="name" placeholder="email or username" />
        <span class="input-error">Too short</span>
        <input type="password" name="password" placeholder="password" />
        <input class="button button-cta" type="submit" value="login" />
    </form>
</div>
```
*/

/*doc
---
title: Form footer
name: form-footer
category: Inputs
---

A generic form footer containing one CTA and a regular button

```html_example

<footer class="form-footer">
    <input
        type="submit"
        value="Submit"
        class="button-cta form-footer-button-cta" />
    <a href="" class="button form-footer-button">Cancel</a>
</footer>
```
*/

.form-footer {
    @include clearfix;
    width: 100%;

    .form-footer-button-cta {
        float: right;

        + [class^="button"] {
            @include rem(margin-right, 10px);
        }
    }

    .form-footer-button {
        float: left;
    }
}
